<template>
    <section class="container">
        <div>
            <h1>
                <nuxt-link to="/user">个人主页</nuxt-link>
            </h1>
            <div>
                <el-button @click="login">登陆</el-button>
                <el-button @click="checkLogin">检测登陆状态</el-button>
            </div>
            <logo/>
            <h1 class="title">
                nuxt-demo
            </h1>
            <h2 class="subtitle">
                nuxt demo for learning
            </h2>
            <div class="links">
                <a
                    href="https://nuxtjs.org/"
                    target="_blank"
                    class="button--green">Documentation</a>
                <a
                    href="https://github.com/nuxt/nuxt.js"
                    target="_blank"
                    class="button--grey">GitHub</a>
            </div>
            <h1>
                <nuxt-link to="/about">About</nuxt-link>
            </h1>
            <h1>
                <nuxt-link :to="{name: 'user', params: {nickname: 'James', gender: '1'}}">General User Page with post Params</nuxt-link>
            </h1>
            <h1>
                <nuxt-link :to="{name: 'user', query: {nickname: 'James', gender: '1'}}">General User Page With Url Query</nuxt-link>
            </h1>
            <h1>
                <nuxt-link to="/user/123">Page For User (id = 123)</nuxt-link>
            </h1>
            <h2 @click="increment">{{$store.state.counter}}</h2>
            <h2>count:{{count}}</h2>
            <h2 @click="incrementAsync2">incrementAsync: {{countAlias}}</h2>
            <h2 @click="autoIncrement">incrementAsync after timer: {{countAlias}}</h2>
        </div>
    </section>
</template>

<script>
    import Logo from '~/components/Logo.vue';
    import {mapState,mapActions} from 'vuex';

    export default {
        /*
            fetch
            异步请求数据
            返回数据不用于填充页面，而是用于更新状态树
         */
        fetch: function({store}) {
            // store.commit('increment');
            // console.log(process)
            console.log(Date.now() + '=====fetch====')
            store.commit('user/login')
        },
        /*
            asyncDate
            1. 异步请求数据
                返回数据用于填充页面
            2. 查询状态数的数据
         */
        asyncData: function({store}) {
            console.log(Date.now() + '====async=====')
            console.log(store.state)
            return {
                user: store.state.user.user
            }
        },
        computed: mapState({
            count: state => state.counter,
            countAlias: 'counter',
        }),
        // computed: mapState([
        //     'counter'
        //     ]
        // ),
        components: {
            Logo
        },
        methods: {
            increment: function() {
                this.$store.commit('increment')
            },
            ...mapActions([
                'incrementAsync2'
            ]),
            ...mapActions({
                autoIncrement: 'incrementAsync'
            }),
            login: function() {
                this.$store.dispatch('user/asyncLogin')
            },
            checkLogin: function() {
                console.log(this.$store.getters.logined)
            }
        },
        middleware: 'authCheck',
        mounted: function () {
            console.log(Date.now() + 'mounted!')
            // let user = sessionStorage.getItem('user');
            console.log(this.user)
        },
        beforeMount: function() {
            console.log(Date.now() + 'before mounted!')
        }
    };
</script>
<noscript>
    服务端执行顺序：middleware > asyncData > fetch,所以这几个方法无法调用sessionStorage
    客服端执行顺序：mounted
</noscript>
<style>

    .container {
        min-height: 100vh;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
    }

    .title {
        font-family: 'Quicksand', 'Source Sans Pro', -apple-system, BlinkMacSystemFont,
        'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
        display: block;
        font-weight: 300;
        font-size: 100px;
        color: #35495e;
        letter-spacing: 1px;
    }

    .subtitle {
        font-weight: 300;
        font-size: 42px;
        color: #526488;
        word-spacing: 5px;
        padding-bottom: 15px;
    }

    .links {
        padding-top: 15px;
    }
</style>
